import os

class BoardSampleManager:
    _package_directory = os.path.dirname(os.path.abspath(__file__))
    _default_raw_samples_path = os.path.join(_package_directory, "assets", "raw_samples")

    @classmethod
    def save_board(cls, file_path, filename, board):
        result = ""

        for row in board:
            row_str = ",".join(str(num) for num in row)
            result += row_str + "\n"

        cls.write_file(file_path, filename, str.strip(result))

    @classmethod
    def read_samples_file(cls, filename):
        with open(f"{cls._default_raw_samples_path}/{filename}", "r") as file:
            return file.read()

    @classmethod
    def write_file(cls, file_path, filename, content):
        with open(os.path.join(cls._package_directory, f"{file_path}/{filename}"), "w") as file:
            file.write(content)

    @classmethod
    def save_easy_standard_samples(cls):
        file_path = "assets/standard_samples/9x9/easy"
        easy_samples_text = cls.read_samples_file("list-easy-samples-9x9.txt")
        easy_samples = easy_samples_text.split("========")
        for i in range(len(easy_samples)):
            easy_sample = easy_samples[i]
            rows = [line for line in easy_sample.split("\n") if line != '']

            board_in_chars = [list(row) for row in rows]
            board = [[int(num) for num in row] for row in board_in_chars]

            cls.save_board(file_path, f"easy_sample_{str(i + 1).zfill(2)}.txt", board)

        print(f"Saved {len(easy_samples)} easy samples to {file_path}")

    @classmethod
    def save_hard_standard_samples(cls):
        file_path = "assets/standard_samples/9x9/hard"
        hard_samples_text = cls.read_samples_file("list-hard-samples-9x9.txt")
        hard_samples = [line for line in hard_samples_text.split("\n") if line != '']
        for i in range(len(hard_samples)):
            hard_sample = hard_samples[i]
            hard_sample_with_empty_cell_as_zero = hard_sample.replace(".", "0")
            int_list = [int(num) for num in hard_sample_with_empty_cell_as_zero]
            board = [int_list[j:j + 9] for j in range(0, len(int_list), 9)]
            cls.save_board(file_path, f"hard_sample_{str(i + 1).zfill(2)}.txt", board)

        print(f"Saved {len(hard_samples)} hard samples to {file_path}")

    @classmethod
    def save_custom_samples(cls, samples, size):
        file_path = os.path.join("assets", f"solvable_puzzle/{size}x{size}")
        for i in range(len(samples)):
            sample = samples[i]
            cls.save_board(file_path=os.path.join("assets", f"solvable_puzzle/{size}x{size}"),
                           filename=f"{size}x{size}_sample_{str(i + 1).zfill(2)}.txt",
                           board=sample)

        print(f"Saved {len(samples)} custom samples to {file_path}")


def main():
    BoardSampleManager.save_easy_standard_samples()
    BoardSampleManager.save_hard_standard_samples()

    sixteen_x_sixteen_samples = list()
    # sixteen_x_sixteen_samples.append("replace this string here with a 2D array")

    twenty_five_x_twenty_five_samples = list()
    # twenty_five_x_twenty_five_samples.append("replace this string here with a 2D array")
    twenty_five_x_twenty_five_samples.append([[0, 0, 12, 0, 0, 0, 0, 3, 6, 0, 0, 11, 0, 0, 0, 13, 0, 0, 0, 8, 0, 0, 0, 0, 21], [5, 7, 0, 0, 0, 0, 8, 0, 0, 0, 21, 0, 0, 14, 0, 0, 11, 0, 24, 2, 0, 0, 0, 0, 0], [0, 2, 4, 0, 0, 0, 0, 0, 0, 17, 25, 10, 0, 13, 0, 5, 0, 0, 0, 16, 0, 18, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 15, 11, 5, 0, 0], [0, 0, 13, 9, 0, 12, 0, 11, 0, 0, 0, 17, 0, 24, 5, 0, 0, 15, 0, 0, 0, 0, 0, 0, 7], [0, 0, 0, 0, 0, 16, 19, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 7, 0], [0, 0, 0, 2, 0, 0, 0, 0, 15, 7, 0, 0, 0, 0, 25, 0, 0, 3, 5, 0, 0, 0, 1, 0, 0], [0, 0, 3, 0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 5], [0, 0, 5, 0, 25, 22, 0, 0, 4, 0, 14, 0, 0, 0, 0, 0, 0, 11, 6, 0, 0, 0, 0, 10, 0], [0, 12, 0, 0, 15, 0, 5, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0], [0, 0, 0, 17, 0, 0, 0, 0, 5, 0, 11, 0, 0, 0, 0, 0, 10, 0, 1, 13, 0, 0, 0, 14, 9], [0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 24, 19, 0, 11, 0, 3, 0, 0, 0, 0], [0, 0, 0, 22, 0, 0, 15, 0, 0, 21, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 15], [0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 19, 0, 0, 0, 5, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0, 0, 14, 0, 0], [0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 24, 0, 0, 0, 1], [0, 0, 21, 0, 1, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 17, 25, 0, 0, 5, 0, 0, 0, 0], [0, 0, 0, 0, 13, 0, 16, 0, 0, 0, 5, 0, 3, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 23], [7, 0, 0, 0, 0, 20, 0, 22, 0, 0, 0, 0, 14, 16, 0, 2, 24, 0, 0, 0, 0, 0, 0, 13, 0], [0, 0, 15, 12, 0, 0, 25, 0, 24, 0, 23, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 22, 0], [0, 0, 0, 0, 0, 19, 0, 16, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 20, 4, 0, 17, 7, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 5, 0, 0, 19, 0, 6, 24, 0], [0, 0, 8, 0, 0, 18, 0, 2, 0, 13, 0, 0, 9, 0, 0, 12, 0, 17, 23, 0, 0, 20, 0, 0, 11]])
    twenty_five_x_twenty_five_samples.append([[0, 23, 0, 9, 0, 19, 0, 0, 11, 0, 0, 0, 14, 0, 0, 8, 0, 3, 0, 2, 24, 0, 16, 0, 0], [2, 0, 0, 0, 0, 8, 0, 3, 15, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 20, 0], [0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0], [24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 4, 1, 12, 0, 0, 0, 0, 21, 13, 0, 17, 0], [8, 10, 0, 3, 0, 0, 0, 14, 25, 0, 0, 15, 7, 0, 0, 13, 0, 6, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 25, 0, 0, 0, 0, 12, 15, 11, 0, 7], [0, 0, 0, 0, 0, 0, 0, 11, 12, 18, 0, 14, 0, 25, 0, 0, 8, 0, 0, 0, 0, 16, 0, 0, 0], [0, 0, 13, 0, 2, 3, 0, 0, 0, 0, 17, 18, 0, 0, 19, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 18, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0], [19, 0, 0, 0, 18, 0, 0, 0, 0, 0, 2, 0, 0, 10, 0, 0, 0, 16, 0, 0, 7, 0, 0, 0, 11], [0, 0, 0, 7, 20, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 17, 13, 0], [0, 4, 0, 11, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 17, 0, 23, 0, 13, 5, 0, 2, 0, 0], [0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 25, 3, 21, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 14, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 10, 16, 20, 0, 0, 0, 0, 0, 12, 11, 0], [0, 0, 0, 5, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 6, 2, 3, 0, 0, 0, 0, 0, 1, 0, 4], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6], [7, 20, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0], [11, 0, 0, 0, 0, 14, 25, 0, 24, 21, 0, 12, 0, 15, 7, 0, 17, 1, 0, 0, 0, 0, 18, 0, 0], [0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 6, 25, 20, 10, 0], [0, 0, 19, 0, 0, 0, 0, 13, 0, 0, 0, 10, 0, 21, 0, 24, 0, 0, 0, 0, 0, 11, 0, 0, 0], [0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 13], [0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 12, 0, 0, 0, 0, 17, 1, 0, 0, 5, 0, 0], [0, 9, 5, 0, 0, 12, 7, 0, 0, 0, 20, 0, 25, 13, 0, 0, 0, 0, 3, 8, 0, 24, 0, 1, 0]])
    twenty_five_x_twenty_five_samples.append([[0, 23, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 24, 0, 16, 0, 0], [0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 24, 18, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 15, 16, 0, 0, 0, 0, 6, 0, 0, 0, 0, 5, 18], [0, 0, 18, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 15, 0, 0], [22, 0, 0, 0, 0, 0, 0, 0, 10, 0, 11, 4, 0, 0, 0, 15, 0, 18, 0, 0, 0, 17, 0, 3, 0], [24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 19, 18, 0, 0, 14, 0, 3], [0, 0, 0, 0, 0, 0, 0, 14, 0, 20, 0, 0, 0, 22, 0, 0, 0, 6, 0, 17, 0, 0, 0, 0, 5], [0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 21, 0, 0, 3, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0], [9, 5, 0, 0, 0, 0, 0, 0, 0, 0, 13, 14, 6, 0, 0, 0, 8, 0, 0, 3, 0, 0, 24, 0, 0], [21, 16, 0, 12, 0, 0, 0, 0, 0, 0, 17, 0, 0, 24, 0, 0, 0, 0, 0, 0, 10, 0, 25, 0, 20], [0, 0, 0, 0, 12, 0, 15, 0, 8, 3, 18, 0, 0, 0, 24, 0, 9, 0, 0, 0, 0, 0, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 9, 13, 0, 2, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 20, 0, 10, 0, 0, 16, 0, 0, 9, 0, 0, 18, 0, 0, 0, 0, 3, 0, 0, 13, 0], [10, 0, 0, 0, 0, 0, 0, 0, 0, 24, 15, 0, 12, 0, 0, 0, 0, 0, 1, 13, 0, 0, 0, 19, 0], [5, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0, 10, 0, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0], [0, 17, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 1, 24, 0], [13, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 17, 19, 0, 5, 0, 4, 0, 0, 9, 0, 0, 0, 0, 0], [7, 0, 22, 0, 0, 10, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 12, 0, 13, 3, 0, 0, 0], [11, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 16, 15, 0, 23, 0, 0, 0, 0, 19, 0, 0, 9, 2], [0, 21, 0, 0, 13, 0, 0, 8, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 10, 23], [18, 0, 19, 0, 1, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 22, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 0, 0, 0, 23, 0, 0, 11, 4, 9, 0, 5, 0, 0, 0, 0, 17, 0, 0, 0, 0], [0, 0, 10, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 12, 0, 0, 23, 13, 17, 0, 0, 0, 0, 18, 19], [17, 0, 5, 0, 0, 0, 7, 0, 0, 0, 20, 0, 0, 0, 14, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0]])
    twenty_five_x_twenty_five_samples.append([[0, 18, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 24, 0, 5, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 25, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 8, 12, 0, 0, 0, 0, 25, 0, 0, 0, 0, 22, 1], [0, 0, 13, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 14, 0, 0], [25, 0, 0, 0, 0, 0, 0, 0, 10, 0, 5, 20, 0, 0, 0, 7, 0, 3, 0, 0, 0, 13, 0, 2, 0], [17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 6, 7, 0, 0, 13, 0, 2], [0, 0, 0, 0, 0, 0, 0, 13, 0, 3, 0, 0, 0, 17, 0, 0, 0, 18, 0, 20, 0, 0, 0, 0, 22], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 10, 0, 0, 1, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0], [12, 1, 0, 0, 0, 0, 0, 0, 0, 0, 11, 25, 6, 0, 0, 0, 22, 0, 0, 10, 0, 0, 18, 0, 0], [13, 16, 0, 20, 0, 0, 0, 0, 0, 0, 19, 0, 0, 9, 0, 0, 0, 0, 0, 0, 14, 0, 11, 0, 12], [0, 0, 0, 0, 25, 0, 10, 0, 11, 12, 14, 0, 0, 0, 21, 0, 7, 0, 0, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 15, 3, 0, 8, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 9, 0, 25, 0, 0, 4, 0, 0, 1, 0, 0, 12, 0, 0, 0, 0, 17, 0, 0, 7, 0], [14, 0, 0, 0, 0, 0, 0, 0, 0, 9, 25, 0, 3, 0, 0, 0, 0, 0, 13, 22, 0, 0, 0, 20, 0], [15, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 5, 0, 21, 0, 4, 0, 0, 0, 25, 0], [0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0], [0, 9, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 24, 5, 0], [16, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 7, 19, 0, 23, 0, 24, 0, 0, 21, 0, 0, 0, 0, 0], [22, 0, 24, 0, 0, 12, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 0, 23, 2, 0, 0, 0], [7, 0, 0, 0, 0, 0, 0, 0, 0, 14, 17, 0, 12, 4, 0, 16, 0, 0, 0, 0, 1, 0, 0, 19, 10], [0, 2, 0, 0, 7, 0, 0, 14, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 10, 6], [10, 0, 20, 0, 16, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 22, 0, 0, 0, 12, 0, 0, 21, 5, 14, 0, 15, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 9, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 2, 0, 0, 8, 11, 23, 0, 0, 0, 0, 17, 24], [23, 0, 4, 0, 0, 0, 19, 0, 0, 0, 6, 0, 0, 0, 3, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0]])

    BoardSampleManager.save_custom_samples(samples=sixteen_x_sixteen_samples, size=16)
    BoardSampleManager.save_custom_samples(samples=twenty_five_x_twenty_five_samples, size=25)


if __name__ == "__main__":
    main()